{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","sortField","setSortField","useState","isReversed","setIsReversed","visibleGoods","goods","_ref","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","isChanged","_jsxs","className","children","_jsx","type","cn","onClick","onReset","map","item","ReactDOM","render","document","getElementById"],"mappings":"kOAMO,MAAMA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAyBnB,MAAMC,EAAMA,KACjB,MAAOC,EAAWC,GAAgBC,mBAAS,KACpCC,EAAYC,GAAiBF,oBAAS,GAEvCG,EA3BR,SAA0BC,EAAKC,GAA8B,IAA5B,UAAEP,EAAS,WAAEG,GAAYI,EACxD,MAAMC,EAAgB,IAAIF,GAe1B,OAbIN,GACFQ,EAAcC,MAAK,CAACC,EAAOC,KACzB,OAAQX,GACN,KAAKH,EACH,OAAOa,EAAME,cAAcD,GAC7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,EACX,IAIAV,EACKK,EAAcM,UAGhBN,CACT,CAMuBO,CAAiBnB,EAAiB,CACrDI,YAAWG,eAEPa,EAA0B,KAAdhB,GAAoBG,EAOtC,OACEc,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,iBAAkB,CAC9B,WAAYtB,IAAcH,IAE5B0B,QAASA,KACPtB,EAAaJ,EAAoB,EACjCsB,SACH,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,oBAAqB,CACjC,WAAYtB,IAAcF,IAE5ByB,QAASA,KACPtB,EAAaH,EAAkB,EAC/BqB,SACH,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,oBAAqB,CACjC,YAAanB,IAEfoB,QAASA,KACPnB,GAAeD,EAAW,EAC1BgB,SACH,YAIAH,GACCI,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QAhDMC,KACdvB,EAAa,IACbG,GAAc,EAAM,EA8CKe,SAClB,aAMLC,cAAA,MAAAD,SACGd,EAAaoB,KAAIC,GAChBN,cAAA,MACE,UAAQ,OAAMD,SAGbO,GAFIA,SAMP,ECpHVC,IAASC,OACPR,cAACrB,EAAG,IACJ8B,SAASC,eAAe,Q","file":"static/js/main.0ebd78c7.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortField, isReversed,\n  });\n  const isChanged = sortField !== '' || isReversed;\n\n  const onReset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FIELD_ALPHABET,\n          })}\n          onClick={() => {\n            setSortField(SORT_FIELD_ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n          onClick={() => {\n            setSortField(SORT_FIELD_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {isChanged && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={onReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(item => (\n          <li\n            data-cy=\"Good\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}